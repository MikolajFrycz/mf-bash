# $HOME/.config/alacritty/alacritty.toml
# by Rito Ghosh 2023-10-06

# Alacritty now uses TOML formatting for its config files.
# This is a simple example.

# There are the specification here: https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd
# It is not obvious how it translates to TOML. But it is extremely straightforward.

# example: WINDOW, COLORS, etc. are tables, and should be represented as [window], [colors], respectively.
# specifics of variables go under them. e.g.- look under "dynamic_padding" under-
# https://github.com/alacritty/alacritty/blob/master/extra/man/alacritty.5.scd#window
# write `dynamic_padding = true` (without backticks -`) under the table [window]
# for variables with multiple values, use "dotted keys". Like setting `padding.x = 5` under [window].
# This is simple. If not clear, do several trials and errors.

# Below is my initial set-up. The TOML homepage (https://toml.io/en/v1.0.0) was very helpful in figuring this out. 
# I put the file alacritty.toml in $HOME/.config/alacritty. However it can be kept anywhere among the places mentioned in
# https://github.com/alacritty/alacritty/tree/master#configuration

[window]

opacity = 0.8
decorations = "Full"
decorations_theme_variant = "Dark" # "Dark"

[font]
size = 12.5
normal = { family = "MesloLGSDZ Nerd Font", style = "Regular" }

# Default colors
[colors.primary]
background = '#15141b'
foreground = '#edecee'

# Normal colors
[colors.normal]
black   = '#110f18'
red     = '#ff6767'
green   = '#61ffca'
yellow  = '#ffca85'
blue    = '#a277ff'
magenta = '#a277ff'
cyan    = '#61ffca'
white   = '#edecee'

# Bright colors
[colors.bright]
black   = '#4d4d4d'
red     = '#ff6767'
green   = '#61ffca'
yellow  = '#ffca85'
blue    = '#a277ff'
magenta = '#a277ff'
cyan    = '#61ffca'
white   = '#edecee'

[colors.selection]
text       = 'CellForeground'
background = '#29263c'

[colors.cursor]
cursor = '#a277ff'
# Tip: for inspiration, look for values in the source code files of your favorite VS Code themes, and use the color picker in
# Google to test colors before setting a value, or simply using an editor such as VS Code where colors are displayed in a 
# small box when a HEX is detected by the editor.
